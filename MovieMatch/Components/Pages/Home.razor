@page "/"
@rendermode InteractiveServer

@using System.Text.Json
@using System.Text.Json.Serialization
@using BlazorBootstrap

@inject HttpClient Client

<PageTitle>MovieMatch</PageTitle>

<div>
    <label>Match movie by IMDb ID?</label>
    <Switch @bind-Value="getMovieByName" @onclick="ClearData" />
    <label>Match movie by name?</label>

</div>

<EditForm Model="movie" OnValidSubmit="Submit">
@*     <DataAnnotationsValidator />
    <ValidationSummary /> *@
    @if (@getMovieByName)
    {
        <div>
            <InputText @bind-Value="movieName" placeholder="Input Movie Name" />
            <InputText @bind-Value="movieYear" placeholder="Input Movie Year" />
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
    }
    else
    {
        <div>
            <InputText @bind-Value="movieId" placeholder="Input Movie IMDb ID" />
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
    }
</EditForm>

@if (getMovieError || movie is null)
{
    <p>Unable to retrieve movie: @reasonPhrase</p>
}
else
{
    <ul>
        <li>@movie.Title</li>
        <li>@movie.Year</li>
        <li>@movie.Rated</li>
        <li>@movie.Released</li>
        <li>@movie.Runtime</li>
        <li>@movie.Genre</li>
        <li>@movie.Director</li>
        <li>@movie.Writer</li>
        <li>@movie.Actors</li>
        <li>@movie.Plot</li>
        <li>@movie.Language</li>
        <li>@movie.Country</li>
        <li>@movie.Awards</li>
    </ul>
}

@code {
    private bool getMovieByName = true;
    private Movie movie = new();
    private bool getMovieError;
    private string reasonPhrase = string.Empty;
    private string movieName = string.Empty;
    private string movieYear = string.Empty;
    private string movieId = string.Empty;


    private async void Submit()
    {
        string url = "";
        try
        {
            MovieQuery query = new(movieName, movieId, movieYear, getMovieByName);
            url = query.GenerateQuery();
        }
        catch
        {
            reasonPhrase = "Please input movie name or ID";
            getMovieError = true;
        }

        HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, url);

        var response = await Client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            movie = await JsonSerializer.DeserializeAsync<Movie>(responseStream);
        }
        else
        {
            reasonPhrase = response.ReasonPhrase;
            getMovieError = true;
        }
    }

    private void ClearData()
    {
        movieName = string.Empty;
        movieYear = string.Empty;
        movieId = string.Empty;
        movie = new();
    }
}